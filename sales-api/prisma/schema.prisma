generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SELLER
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

enum PaymentStatus {
  PENDING
  PAID
  CANCELED
}

enum PaymentMethod {
  PIX
  CARTAO
  DINHEIRO
  BOLETO
}

model User {
  id                String      @id @default(uuid())
  name              String
  email             String      @unique
  password          String
  role              Role        @default(SELLER)
  status            UserStatus  @default(ACTIVE)
  commissionPercent Decimal     @default(0.05) // 5%
  lastLoginAt       DateTime?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt

  sales             Sale[]
  salesGoals        SalesGoal[]

  @@index([role])
  @@index([status])
}

model Client {
  id            String   @id @default(uuid())
  name          String
  cpf           String   @unique
  email         String?
  phone         String?
  cep           String?
  city          String?
  neighborhood  String?
  street        String?
  number        String?
  state         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  sales         Sale[]

  @@index([name])
  @@index([cpf])
}

model Product {
  id              String   @id @default(uuid())
  name            String
  sku             String   @unique
  price           Decimal
  isActive        Boolean  @default(true)
  imageUrl        String?
  imageAlt        String?
  imageStorageKey String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  saleItems       SaleItem[]

  @@index([name])
  @@index([isActive])
}

model Sale {
  id          String   @id @default(uuid())
  sellerId    String
  clientId    String
  date        DateTime @default(now())
  totalValue  Decimal

  paymentStatus PaymentStatus @default(PENDING)
  paymentMethod PaymentMethod?
  paymentDate   DateTime?
  receiptUrl    String?

  commissionPercentSnapshot Decimal?
  commissionValue           Decimal?
  notes       String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  seller      User     @relation(fields: [sellerId], references: [id])
  client      Client   @relation(fields: [clientId], references: [id])
  items       SaleItem[]

  @@index([date])
  @@index([paymentStatus])
}

model SaleItem {
  id         String  @id @default(uuid())
  saleId     String
  productId  String
  quantity   Int
  unitPrice  Decimal
  subtotal   Decimal

  sale     Sale    @relation(fields: [saleId], references: [id], onDelete: Cascade)
  product  Product @relation(fields: [productId], references: [id])

  @@unique([saleId, productId])
  @@index([productId])
}

model SalesGoal {
  id        String   @id @default(uuid())
  userId    String
  month     String   // "YYYY-MM"
  target    Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, month])
}
